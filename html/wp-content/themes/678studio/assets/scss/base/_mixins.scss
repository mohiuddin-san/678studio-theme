@use 'sass:map';
@use 'sass:math';
@use 'sass:string';

@use 'variables' as v;

/*
 * Mixins
 * 再利用可能なスタイルパターンを定義
 */

// Breakpoints
$breakpoints: (
	'xsm': 320px,
	'sm': 480px,
	'md': 768px,
	'lg': 1024px,
	'xl': 1280px,
	'xxl': 1440px,
);

// メディアクエリ（デフォルトをmax-widthに変更）
@mixin mq($breakpoint, $type: max) {
	@if map.has-key($breakpoints, $breakpoint) {
		$value: map.get($breakpoints, $breakpoint);

		@if $type == max {
			// 指定値より小さい（未満）
			$value: $value - 1;
			@media (max-width: #{$value}) {
				@content;
			}
		} @else {
			// 指定値以上
			@media (min-width: #{$value}) {
				@content;
			}
		}
	} @else {
		@error 'Invalid breakpoint: #{$breakpoint}';
	}
}

/**
 * シンプル化したレスポンシブサイズ関数 - 縮小率を直接指定可能
 * 
 * @param {Number} $max-size - 最大サイズ（PC向け1440pxでの値）
 * @param {Number} $ratio - 縮小率（デフォルト0.74）
 * @return {String} - 計算されたcalc()式
 * 
 * 使用例:
 * font-size: fs(20);           // 基本使用法（デフォルト縮小率0.74）
 * font-size: fs(20, 0.5);      // 縮小率0.5で計算
 * font-size: fs(20, 1.2);      // 拡大率1.2で計算
 */
@function fs($max-size, $ratio: 0.74) {
	// 固定のビューポート範囲
	$min-vw: 768;
	$max-vw: 1440;

	// 最小サイズを計算
	$min-size: $max-size * $ratio;

	// calc式を返す
	@return calc(
		#{$min-size}px + (#{$max-size - $min-size}) *
			((100vw - #{$min-vw}px) / (#{$max-vw - $min-vw}))
	);
}

/**
 * 768px以下（モバイル）専用のレスポンシブサイズ関数
 * 比率を維持して画面幅に比例してスケール
 * 
 * @param {Number} $size-480 - 480pxでの基準サイズ
 * @return {String} - 計算されたvw値
 */
@function fsm($size-480) {
	// 480pxを基準として画面幅の割合を計算
	$vw-ratio: math.div($size-480, 480) * 100;
	// 360px以下では段階的に縮小、それ以上では比率維持
	@return clamp(#{$size-480 * 0.6}px, #{$vw-ratio}vw, #{$size-480 * 1.8}px);
}


// Flexbox center mixin
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

// Button reset mixin
@mixin button-reset {
	background: none;
	border: none;
	padding: 0;
	margin: 0;
	cursor: pointer;
	outline: none;
}

// Clearfix mixin
@mixin clearfix {
	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

// PCでのみ表示するミックスイン
@mixin pc-only {
	display: none;

	@include mq(md, min) {
		display: block;
	}
}

// スマホでのみ表示するミックスイン
@mixin sp-only {
	display: block;

	@include mq(md, min) {
		display: none;
	}
}
