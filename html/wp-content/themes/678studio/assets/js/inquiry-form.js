// „ÅäÂïè„ÅÑÂêà„Çè„Åõ„Éï„Ç©„Éº„É†ÂàùÊúüÂåñ„ÅÆÁ¢∫ÂÆü„Å™ÂÆüË°å
(function() {
    'use strict';

    // „Éá„Éê„ÉÉ„Ç∞Ë®≠ÂÆö
    const DEBUG_MODE = false; // Êú¨Áï™Áí∞Â¢É„Åß„ÅØ false „Å´Ë®≠ÂÆö
    const debug = DEBUG_MODE ? console.log.bind(console) : () => {};
    const debugError = DEBUG_MODE ? console.error.bind(console) : () => {};

    // DOMË™≠„ÅøËæº„ÅøÂÆå‰∫Ü„ÅÆÁ¢∫ÂÆü„Å™ÂæÖÊ©ü
    function ensureDOM(callback) {
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', callback);
        } else {
            callback();
        }
    }

    ensureDOM(function() {

    // DOMË¶ÅÁ¥†„ÅÆÂèñÂæó
    const form = document.getElementById('inquiryForm');
    const formStep = document.getElementById('formStep');
    const confirmationStep = document.getElementById('confirmationStep');
    const backButton = document.getElementById('backButton');
    const submitButton = document.getElementById('submitButton');
    const confirmButton = document.querySelector('.confirm-button');

    // ÂøÖÈ†à„Éï„Ç£„Éº„É´„Éâ„ÅÆÂÆöÁæ©
    const requiredFields = [
        { id: 'name', errorId: 'name-error', message: '„ÅäÂêçÂâç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ' },
        { id: 'kana', errorId: 'kana-error', message: '„Éï„É™„Ç¨„Éä„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ' },
        { id: 'email', errorId: 'email-error', message: 'Ê≠£„Åó„ÅÑ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ' },
        { id: 'store-select', errorId: 'store-error', message: 'Â∫óËàó„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ' },
        { id: 'agreement', errorId: 'agreement-error', message: 'ÂÄã‰∫∫ÊÉÖÂ†±„ÅÆÂèñ„ÇäÊâ±„ÅÑ„Å´„Å§„ÅÑ„Å¶ÂêåÊÑè„Åó„Å¶„Åè„Å†„Åï„ÅÑ' }
    ];

    // „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞Áæ§
    function hideAllErrors() {
        requiredFields.forEach(field => {
            const errorElement = document.getElementById(field.errorId);
            if (errorElement) {
                errorElement.style.display = 'none';
            }
        });
    }

    function showError(fieldId, message) {
        const errorElement = document.getElementById(fieldId);
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }

    function validateSingleField(field) {
        const element = document.getElementById(field.id);
        if (!element) {
            console.warn(`‚ö†Ô∏è Ë¶ÅÁ¥†„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì: ${field.id}`);
            return false;
        }

        let isValid = true;
        let value;

        // „Éï„Ç£„Éº„É´„ÉâÂà•„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
        if (element.type === 'checkbox') {
            value = element.checked ? 'checked' : 'unchecked';
            isValid = element.checked;
        } else if (element.type === 'email') {
            value = element.value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            isValid = value !== '' && emailRegex.test(value);
        } else if (element.tagName === 'SELECT') {
            value = element.value;
            isValid = value !== '' && value !== null && value !== '0';
        } else {
            value = element.value.trim();
            isValid = value !== '';
        }

        debug(`üîç ${field.id}: ${isValid ? '‚úÖ' : '‚ùå'} "${value}"`);

        // „Ç®„É©„ÉºË°®Á§∫„ÅØÂëº„Å≥Âá∫„ÅóÂÖÉ„ÅßÂà∂Âæ°„Åô„Çã„Åü„ÇÅ„ÄÅ„Åì„Åì„Åß„ÅØË°®Á§∫„Åó„Å™„ÅÑ
        return isValid;
    }

    function validateAllFields() {
        debug('üîÑ ÂÖ®„Éï„Ç£„Éº„É´„ÉâÊ§úË®ºÈñãÂßã');
        hideAllErrors();

        let allValid = true;
        requiredFields.forEach(field => {
            const isValid = validateSingleField(field);
            if (!isValid) {
                allValid = false;
                showError(field.errorId, field.message);
            }
        });

        debug(`üìã Ê§úË®ºÁµêÊûú: ${allValid ? '‚úÖ ÂÖ®„Å¶ÊúâÂäπ' : '‚ùå „Ç®„É©„Éº„ÅÇ„Çä'}`);
        return allValid;
    }

    // „Éï„Ç©„Éº„É†„Éá„Éº„ÇøÂèéÈõÜ
    function collectFormData() {
        const data = {
            name: document.getElementById('name').value.trim(),
            kana: document.getElementById('kana').value.trim(),
            contact: document.getElementById('contact').value.trim(),
            email: document.getElementById('email').value.trim(),
            notes: document.getElementById('notes').value.trim(),
            store: getSelectedStoreName()
        };

        debug('üì¶ ÂèéÈõÜ„Åï„Çå„Åü„Éá„Éº„Çø:', data);
        return data;
    }

    function getSelectedStoreName() {
        const select = document.getElementById('store-select');
        if (select && select.value) {
            const selectedOption = select.options[select.selectedIndex];
            if (selectedOption && selectedOption.value !== '') {
                return selectedOption.textContent;
            }
        }
        return '';
    }

    function populateConfirmationData(data) {
        debug('üìù Á¢∫Ë™çÁîªÈù¢„Å´„Éá„Éº„Çø„ÇíË°®Á§∫');

        const mappings = [
            { confirmId: 'confirmName', value: data.name },
            { confirmId: 'confirmKana', value: data.kana },
            { confirmId: 'confirmContact', value: data.contact || 'ÂÖ•Âäõ„Å™„Åó' },
            { confirmId: 'confirmEmail', value: data.email },
            { confirmId: 'confirmStore', value: data.store || 'ÈÅ∏Êäû„Å™„Åó' },
            { confirmId: 'confirmNotes', value: data.notes || 'ÂÖ•Âäõ„Å™„Åó' }
        ];

        mappings.forEach(mapping => {
            const element = document.getElementById(mapping.confirmId);
            if (element) {
                element.textContent = mapping.value;
            }
        });
    }

    function disableFormFields() {
        // ÂÖ®„Å¶„ÅÆ„Éï„Ç©„Éº„É†ÂÖ•ÂäõË¶ÅÁ¥†„ÇíÁÑ°ÂäπÂåñ
        const formInputs = form.querySelectorAll('input, select, textarea');
        formInputs.forEach(input => {
            input.disabled = true;
            input.setAttribute('readonly', true);
        });
    }

    function enableFormFields() {
        // ÂÖ®„Å¶„ÅÆ„Éï„Ç©„Éº„É†ÂÖ•ÂäõË¶ÅÁ¥†„ÇíÊúâÂäπÂåñ
        const formInputs = form.querySelectorAll('input, select, textarea');
        formInputs.forEach(input => {
            input.disabled = false;
            input.removeAttribute('readonly');
        });
    }

    function showConfirmationStep() {
        debug('üìã Á¢∫Ë™çÁîªÈù¢„ÇíË°®Á§∫');
        const formData = collectFormData();
        populateConfirmationData(formData);

        // „Éï„Ç©„Éº„É†„Éï„Ç£„Éº„É´„Éâ„ÇíÁÑ°ÂäπÂåñ„Åó„Å¶Á∑®ÈõÜ„ÇíÈò≤„Åê
        disableFormFields();

        formStep.style.display = 'none';
        confirmationStep.style.display = 'block';
        window.scrollTo(0, 0);
    }

    // „É™„Ç¢„É´„Çø„Ç§„É†„Éê„É™„Éá„Éº„Ç∑„Éß„É≥Áî®„ÅÆ„Ç§„Éô„É≥„Éà„É™„Çπ„Éä„ÉºË®≠ÂÆö
    function setupRealtimeValidation() {
        requiredFields.forEach(field => {
            const element = document.getElementById(field.id);
            if (element) {
                // input, change, blur „Ç§„Éô„É≥„Éà„Åß„É™„Ç¢„É´„Çø„Ç§„É†Ê§úË®º
                ['input', 'change', 'blur'].forEach(eventType => {
                    element.addEventListener(eventType, () => {
                        // Âçò‰∏Ä„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
                        const isValid = validateSingleField(field);

                        // ÊúâÂäπ„Å™Â†¥Âêà„ÅØ„Ç®„É©„Éº„ÇíÈùûË°®Á§∫
                        if (isValid) {
                            const errorElement = document.getElementById(field.errorId);
                            if (errorElement) {
                                errorElement.style.display = 'none';
                                debug(`‚úÖ ${field.id} „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈùûË°®Á§∫`);
                            }
                        }
                    });
                });
            }
        });
    }

    // ÂàùÊúüÂåñÂá¶ÁêÜ
    function initialize() {
        // ÂÖ®„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈùûË°®Á§∫
        hideAllErrors();

        // Á¢∫Ë™ç„Éú„Çø„É≥„ÇíÂº∑Âà∂ÁöÑ„Å´ÊúâÂäπÂåñ
        if (confirmButton) {
            confirmButton.disabled = false;
            confirmButton.removeAttribute('disabled');
            confirmButton.style.pointerEvents = 'auto';
            debug('Á¢∫Ë™ç„Éú„Çø„É≥ÊúâÂäπÂåñ');
        } else {
            debugError('‚ùå Á¢∫Ë™ç„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }

        // „É™„Ç¢„É´„Çø„Ç§„É†„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„ÅÆË®≠ÂÆö
        setupRealtimeValidation();
    }

    // „Ç§„Éô„É≥„Éà„É™„Çπ„Éä„ÉºË®≠ÂÆö
    if (confirmButton) {
        confirmButton.addEventListener('click', (e) => {
            e.preventDefault();

            if (validateAllFields()) {
                showConfirmationStep();
            }
        });
    }

    if (backButton) {
        backButton.addEventListener('click', () => {
            // „Éï„Ç©„Éº„É†„Éï„Ç£„Éº„É´„Éâ„ÇíÂÜçÂ∫¶ÊúâÂäπÂåñ
            enableFormFields();

            confirmationStep.style.display = 'none';
            formStep.style.display = 'block';
            window.scrollTo(0, 0);
        });
    }

    if (submitButton) {
        submitButton.addEventListener('click', async () => {
            const submitBtn = submitButton;
            const originalText = submitBtn.textContent;

            try {
                submitBtn.disabled = true;
                submitBtn.textContent = 'ÈÄÅ‰ø°‰∏≠...';

                const formData = new FormData();
                formData.append('action', 'siaes_submit_form');
                formData.append('nonce', window.siaes_ajax?.nonce || '');
                formData.append('page_id', window.siaes_ajax?.page_id || '');

                // Á¢∫Ë™çÁîªÈù¢„ÅÆ„Éá„Éº„Çø„Çí‰ΩøÁî®
                const confirmData = {
                    name: document.getElementById('confirmName').textContent,
                    kana: document.getElementById('confirmKana').textContent,
                    contact: document.getElementById('confirmContact').textContent,
                    email: document.getElementById('confirmEmail').textContent,
                    'shop-id': document.getElementById('store-select').value,
                    notes: document.getElementById('notes').value,
                    agreement: document.getElementById('agreement').checked ? '1' : '0'
                };

                Object.keys(confirmData).forEach(key => {
                    if (confirmData[key] !== null && confirmData[key] !== undefined) {
                        formData.append(key, confirmData[key]);
                    }
                });

                const response = await fetch(window.siaes_ajax?.ajax_url || 'http://localhost:8080/wp-admin/admin-ajax.php', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    alert('„ÅäÂïè„ÅÑÂêà„Çè„Åõ„ÇíÊâø„Çä„Åæ„Åó„Åü„ÄÇ2Âñ∂Ê•≠Êó•‰ª•ÂÜÖ„Å´„ÅîÈÄ£Áµ°„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ');

                    // „Éï„Ç©„Éº„É†„Éï„Ç£„Éº„É´„Éâ„ÇíÊúâÂäπÂåñ„Åó„Å¶„Åã„Çâ„É™„Çª„ÉÉ„Éà
                    enableFormFields();
                    form.reset();

                    confirmationStep.style.display = 'none';
                    formStep.style.display = 'block';
                    window.scrollTo(0, 0);
                } else {
                    alert('ÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Çí„Åä„ÅÑ„Å¶ÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ');
                }
            } catch (error) {
                debugError('ÈÄÅ‰ø°„Ç®„É©„Éº:', error);
                alert('ÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Çí„Åä„ÅÑ„Å¶ÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ');
            } finally {
                submitBtn.disabled = false;
                submitBtn.textContent = originalText;
            }
        });
    }

    // ÂàùÊúüÂåñÂÆüË°å
    initialize();

    // „Éá„Éê„ÉÉ„Ç∞Áî®ÔºöÂàùÊúüÂåñÁ¢∫Ë™ç
    if (DEBUG_MODE) {
        setTimeout(() => {
            debug('Ë®∫Êñ≠: „Éï„Ç©„Éº„É†Ë¶ÅÁ¥†', requiredFields.map(f => f.id + ':' + !!document.getElementById(f.id)).join(', '));
            debug('Ë®∫Êñ≠: Á¢∫Ë™ç„Éú„Çø„É≥', !!confirmButton && !confirmButton.disabled);
        }, 2000);
    }

    // „Éá„Éê„ÉÉ„Ç∞Áî®Ôºö„Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„ÇíËøΩÂä†ÔºàÁ¢∫ÂÆü„Å´window„Å´Ë®≠ÂÆöÔºâ
    if (typeof window !== 'undefined') {
        window.debugInquiryForm = {
            testValidation: () => {
                debug('üß™ ÊâãÂãï„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„ÉÜ„Çπ„ÉàÈñãÂßã');
                const result = validateAllFields();
                debug('üß™ „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÁµêÊûú:', result);
                return result;
            },
            hideErrors: () => {
                debug('üß™ ÊâãÂãï„Ç®„É©„ÉºÈùûË°®Á§∫');
                hideAllErrors();
            },
            checkElements: () => {
                debug('üß™ Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ');
                requiredFields.forEach(field => {
                    const element = document.getElementById(field.id);
                    const errorElement = document.getElementById(field.errorId);
                    debug(`${field.id}: Ë¶ÅÁ¥†=${!!element}, „Ç®„É©„Éº=${!!errorElement}`);
                });
            },
            isLoaded: true,
            version: '1.0.0'
        };
    }

    debug('„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Éï„Ç©„Éº„É†ÂàùÊúüÂåñÂÆå‰∫Ü');
    }); // ensureDOM callback end
})(); // IIFE end